import { isAddress } from "ethers/lib/utils";
import React, { useState } from "react";
import "../../styles/Vulnerability/ContactInfo.scss";
import { AccordionContext } from "./VulnerabilityAccordion";
import classNames from "classnames";
import { Card, IContactData } from "./types";

interface IProps {
  data: IContactData
}

export default function ContactInfo({ data }: IProps) {
  const [username, setUsername] = useState(data.username);
  const [beneficiary, setBeneficiary] = useState(data.beneficiary);

  const { submitCard } = React.useContext(AccordionContext);

  const usernameInputClass = classNames({
    "input-error": username === ""
  })

  const beneficiaryInputClass = classNames({
    "input-error": !isAddress(beneficiary)
  })

  return (
    <div className="contact-info-wrapper card-content">
      <div>1. Add your Telegram user: <br />You will be updated via your Telegram user in the submition progress</div>
      <input className={usernameInputClass} autoFocus type="text" placeholder="@AddYourUserNameHere" value={username} onChange={(e) => setUsername(e.target.value)} />
      <div>2. Add your beneficiary wallet address: <br />The prize will be transferred to the beneficiary wallet address you provide.</div>
      <input className={beneficiaryInputClass} type="text" placeholder="AddTheBeneficiarywalletAddressHere" value={beneficiary} onChange={(e) => setBeneficiary(e.target.value)} />
      {beneficiary !== "" && !isAddress(beneficiary) && <span className="error">Please enter a valid address</span>}
      <div className="add-contact-data">
        <button disabled={username === "" || beneficiary === "" || !isAddress(beneficiary)} onClick={() => submitCard(Card.contact, Card.description, { username: username, beneficiary: beneficiary })}>ADD</button>
      </div>
    </div>
  )
}
